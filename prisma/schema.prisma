// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @unique @default(autoincrement())
  name      String
  surname   String?
  email     String @unique
  role      String? 
  password  String
  course    String?
  active    Boolean @default(true)
  aceptNotifications Boolean @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  offers Offer[]
  rates Rate[]
  
}


model Offer {
  id                Int @id @unique @default(autoincrement())
  title             String
  descripcion       String?
  active            Boolean @default(true)
  contactEmail      String?
  location          String?
  publised          DateTime @default(now()) //iso 8601
  expired           DateTime
  
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  //FK
  idCategtory  Int? 
  category Category? @relation(fields: [idCategtory], references: [id])
  idUserCreator Int
  userCreator User @relation(fields: [idUserCreator], references: [id])
  rate Rate[]
}


model Category{
  id                Int @id @unique @default(autoincrement())
  name              String @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  offers           Offer[]
}

model Rate{
  idUser Int 
  idOffer Int
  value Int //@check()
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user User @relation(fields: [idUser], references: [id])
  offer Offer @relation(fields: [idOffer], references: [id])

  @@id([idUser,idOffer])

}